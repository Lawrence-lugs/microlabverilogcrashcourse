$date
	Fri Sep  5 15:46:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_alu $end
$var wire 1 ! zero $end
$var wire 4 " result [3:0] $end
$var parameter 32 # CLK_PERIOD $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & clk $end
$var reg 3 ' opcode [2:0] $end
$var reg 2048 ( operation_name [2047:0] $end
$var integer 32 ) fail_count [31:0] $end
$var integer 32 * pass_count [31:0] $end
$var integer 32 + test_count [31:0] $end
$scope module dut $end
$var wire 4 , a [3:0] $end
$var wire 4 - b [3:0] $end
$var wire 3 . opcode [2:0] $end
$var wire 1 ! zero $end
$var wire 4 / xor_res [3:0] $end
$var wire 4 0 sum [3:0] $end
$var wire 4 1 shift_res [3:0] $end
$var wire 4 2 result [3:0] $end
$var wire 4 3 diff [3:0] $end
$var wire 4 4 and_res [3:0] $end
$scope module u_adder $end
$var wire 4 5 a [3:0] $end
$var wire 4 6 b [3:0] $end
$var wire 4 7 sum [3:0] $end
$upscope $end
$scope module u_and $end
$var wire 4 8 a [3:0] $end
$var wire 4 9 b [3:0] $end
$var wire 4 : result [3:0] $end
$upscope $end
$scope module u_is_zero $end
$var wire 1 ! out $end
$var wire 4 ; in [3:0] $end
$upscope $end
$scope module u_mux $end
$var wire 4 < in1 [3:0] $end
$var wire 4 = in3 [3:0] $end
$var wire 3 > sel [2:0] $end
$var wire 4 ? out [3:0] $end
$var wire 4 @ in5 [3:0] $end
$var wire 4 A in4 [3:0] $end
$var wire 4 B in2 [3:0] $end
$upscope $end
$scope module u_shift $end
$var wire 4 C a [3:0] $end
$var wire 4 D shift_amt [3:0] $end
$var wire 2 E shift_amt_2b [1:0] $end
$var wire 4 F result [3:0] $end
$upscope $end
$scope module u_subtractor $end
$var wire 4 G a [3:0] $end
$var wire 4 H b [3:0] $end
$var wire 4 I diff [3:0] $end
$upscope $end
$scope module u_xor $end
$var wire 4 J a [3:0] $end
$var wire 4 K b [3:0] $end
$var wire 4 L result [3:0] $end
$upscope $end
$upscope $end
$scope task test_operation $end
$var reg 1 M expected_cout $end
$var reg 4 N expected_result [3:0] $end
$var reg 1 O expected_zero $end
$var reg 2048 P op_name [2047:0] $end
$var reg 4 Q test_a [3:0] $end
$var reg 4 R test_b [3:0] $end
$var reg 3 S test_opcode [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 #
$end
#0
$dumpvars
bx S
bx R
bx Q
bx P
xO
bx N
xM
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
bx (
b0 '
0&
b0 %
b0 $
b0 "
1!
$end
#5
1&
#10
b10 E
0!
b11 "
b11 2
b11 ;
b11 ?
b0 1
b0 @
b0 F
b11 /
b11 A
b11 L
0&
b100000101000100010001000011101000100000001100010010101100110010 (
b10 %
b10 -
b10 6
b10 9
b10 D
b10 H
b10 K
b11 0
b11 7
b11 <
b1111 3
b1111 B
b1111 I
b1 $
b1 ,
b1 5
b1 8
b1 C
b1 G
b1 J
b1 +
b100000101000100010001000011101000100000001100010010101100110010 P
0O
0M
b11 N
b0 S
b10 R
b1 Q
#11
b1110 1
b1110 @
b1110 F
b1 E
1!
b0 "
b0 2
b0 ;
b0 ?
b1 4
b1 :
b1 =
b1110 /
b1110 A
b1110 L
b100000101000100010001000011101000100000001100010011010100101011001100010010000000101000011011110111011001100101011100100110011001101100011011110111011100101001 (
b1 %
b1 -
b1 6
b1 9
b1 D
b1 H
b1 K
b0 0
b0 7
b0 <
b1110 3
b1110 B
b1110 I
b1111 $
b1111 ,
b1111 5
b1111 8
b1111 C
b1111 G
b1111 J
b10 +
b100000101000100010001000011101000100000001100010011010100101011001100010010000000101000011011110111011001100101011100100110011001101100011011110111011100101001 P
1O
1M
b0 N
b1 R
b1111 Q
b1 *
#12
b10 1
b10 @
b10 F
0!
b11 "
b11 2
b11 ;
b11 ?
b10 E
b0 4
b0 :
b0 =
b111 /
b111 A
b111 L
b101001101010101010000100011101000100000001101010010110100110010 (
b1 '
b1 .
b1 >
b10 %
b10 -
b10 6
b10 9
b10 D
b10 H
b10 K
b111 0
b111 7
b111 <
b11 3
b11 B
b11 I
b101 $
b101 ,
b101 5
b101 8
b101 C
b101 G
b101 J
b11 +
b101001101010101010000100011101000100000001101010010110100110010 P
0O
0M
b11 N
b1 S
b10 R
b101 Q
b10 *
#13
b0 1
b0 @
b0 F
b1111 "
b1111 2
b1111 ;
b1111 ?
b1 E
b1 /
b1 A
b1 L
b101001101010101010000100011101000100000001100000010110100110001001000000010100001110101011011100110010001100101011100100110011001101100011011110111011100101001 (
b1 %
b1 -
b1 6
b1 9
b1 D
b1 H
b1 K
b1 0
b1 7
b1 <
b1111 3
b1111 B
b1111 I
b0 $
b0 ,
b0 5
b0 8
b0 C
b0 G
b0 J
b100 +
b101001101010101010000100011101000100000001100000010110100110001001000000010100001110101011011100110010001100101011100100110011001101100011011110111011100101001 P
1M
b1111 N
b1 R
b0 Q
b11 *
#14
b110 1
b110 @
b110 F
0!
b1000 "
b1000 2
b1000 ;
b1000 ?
b10 E
b1000 4
b1000 :
b1000 =
b110 /
b110 A
b110 L
b1000001010011100100010000111010001000000011000100110001001100000011000000100000001001100010000000110001001100000011000100110000 (
b10 '
b10 .
b10 >
b1010 %
b1010 -
b1010 6
b1010 9
b1010 D
b1010 H
b1010 K
b110 0
b110 7
b110 <
b10 3
b10 B
b10 I
b1100 $
b1100 ,
b1100 5
b1100 8
b1100 C
b1100 G
b1100 J
b101 +
b1000001010011100100010000111010001000000011000100110001001100000011000000100000001001100010000000110001001100000011000100110000 P
0M
b1000 N
b10 S
b1010 R
b1100 Q
b100 *
#15
1!
b0 "
b0 2
b0 ;
b0 ?
b1111 1
b1111 @
b1111 F
b0 E
b0 4
b0 :
b0 =
b1111 /
b1111 A
b1111 L
b1000001010011100100010000111010001000000011000100110001001100010011000100100000001001100010000000110000001100000011000000110000 (
b0 %
b0 -
b0 6
b0 9
b0 D
b0 H
b0 K
b1111 0
b1111 7
b1111 <
b1111 3
b1111 B
b1111 I
b1111 $
b1111 ,
b1111 5
b1111 8
b1111 C
b1111 G
b1111 J
b110 +
b1000001010011100100010000111010001000000011000100110001001100010011000100100000001001100010000000110000001100000011000000110000 P
1O
b0 N
b0 R
b1111 Q
b101 *
1&
#16
0!
b110 "
b110 2
b110 ;
b110 ?
b10 E
b1000 4
b1000 :
b1000 =
b110 1
b110 @
b110 F
b110 /
b110 A
b110 L
b1011000010011110101001000111010001000000011000100110001001100000011000000100000010111100010000000110001001100000011000100110000 (
b11 '
b11 .
b11 >
b1010 %
b1010 -
b1010 6
b1010 9
b1010 D
b1010 H
b1010 K
b110 0
b110 7
b110 <
b10 3
b10 B
b10 I
b1100 $
b1100 ,
b1100 5
b1100 8
b1100 C
b1100 G
b1100 J
b111 +
b1011000010011110101001000111010001000000011000100110001001100000011000000100000010111100010000000110001001100000011000100110000 P
0O
b110 N
b11 S
b1010 R
b1100 Q
b110 *
#17
1!
b0 "
b0 2
b0 ;
b0 ?
b1110 1
b1110 @
b1110 F
b11 E
b1111 4
b1111 :
b1111 =
b0 /
b0 A
b0 L
b1011000010011110101001000111010001000000011000100110001001100010011000100100000010111100010000000110001001100010011000100110001 (
b1111 %
b1111 -
b1111 6
b1111 9
b1111 D
b1111 H
b1111 K
b1110 0
b1110 7
b1110 <
b0 3
b0 B
b0 I
b1111 $
b1111 ,
b1111 5
b1111 8
b1111 C
b1111 G
b1111 J
b1000 +
b1011000010011110101001000111010001000000011000100110001001100010011000100100000010111100010000000110001001100010011000100110001 P
1O
b0 N
b1111 R
b1111 Q
b111 *
#18
0!
b110 "
b110 2
b110 ;
b110 ?
b110 1
b110 @
b110 F
b1 E
b1 4
b1 :
b1 =
b10 /
b10 A
b10 L
b1010011010010000100100101000110010101000011101000100000001100000011000000110001001100010010000000111100001111000010000000110001 (
b100 '
b100 .
b100 >
b1 %
b1 -
b1 6
b1 9
b1 D
b1 H
b1 K
b100 0
b100 7
b100 <
b10 3
b10 B
b10 I
b11 $
b11 ,
b11 5
b11 8
b11 C
b11 G
b11 J
b1001 +
b1010011010010000100100101000110010101000011101000100000001100000011000000110001001100010010000000111100001111000010000000110001 P
0O
b110 N
b100 S
b1 R
b11 Q
b1000 *
#19
1!
b0 "
b0 2
b0 ;
b0 ?
b0 1
b0 @
b0 F
b0 4
b0 :
b0 =
b1001 /
b1001 A
b1001 L
b101001101001000010010010100011001010100001110100010000000110001001100000011000000110000001000000011110000111100001000000011000100100000001010000111101001100101011100100110111100101001 (
b1001 0
b1001 7
b1001 <
b111 3
b111 B
b111 I
b1000 $
b1000 ,
b1000 5
b1000 8
b1000 C
b1000 G
b1000 J
b1010 +
b101001101001000010010010100011001010100001110100010000000110001001100000011000000110000001000000011110000111100001000000011000100100000001010000111101001100101011100100110111100101001 P
1O
b0 N
b1000 Q
b1001 *
#20
b1010 *
0&
